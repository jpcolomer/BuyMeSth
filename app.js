// Generated by CoffeeScript 1.4.0
(function() {
  var app, express, http, io, redis, redisClient, server, storeItem;

  express = require('express');

  http = require('http');

  redis = require('redis');

  app = express();

  server = http.createServer(app);

  io = require('socket.io').listen(server);

  redisClient = redis.createClient();

  app.set("view engine", "jade");

  app.set("views", __dirname + "/views");

  app.use(express["static"]('public'));

  app.get("/", function(request, response) {
    return response.render("index");
  });

  io.sockets.on('connection', function(socket) {
    console.log('Client connected ...');
    socket.on("items:create", function(item) {
      return storeItem(item, function() {
        return socket.broadcast.emit("addItem", item);
      });
    });
    return socket.on("join", function() {
      return redisClient.lrange("items", 0, -1, function(err, items) {
        var item, _i, _len, _results;
        items = items.reverse();
        _results = [];
        for (_i = 0, _len = items.length; _i < _len; _i++) {
          item = items[_i];
          item = JSON.parse(item);
          _results.push(socket.emit("addItem", item));
        }
        return _results;
      });
    });
  });

  storeItem = function(data, callback) {
    var item;
    item = JSON.stringify(data);
    return redisClient.lpush("items", item, callback);
  };

  io.configure('production', function() {
    console.log('Server in production mode');
    io.enable('browser client minification');
    io.enable('browser client etag');
    io.enable('browser client gzip');
    io.set('log level', 1);
    return io.set('transports', ['websocket', 'flashsocket', 'htmlfile', 'xhr-polling', 'jsonp-polling']);
  });

  server.listen(8080);

}).call(this);
